{"remainingRequest":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aleksej/Projects/what2vue/src/components/renderless/Fetch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aleksej/Projects/what2vue/src/components/renderless/Fetch.vue","mtime":1615023296112},{"path":"/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js","mtime":1610645746854},{"path":"/Users/aleksej/Projects/what2vue/node_modules/babel-loader/lib/index.js","mtime":1610645748948},{"path":"/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js","mtime":1610645746854},{"path":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/index.js","mtime":1610645763935}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHJlZiwgb25Nb3VudGVkIH0gZnJvbSAnQHZ1ZS9jb21wb3NpdGlvbi1hcGknCgpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIGFwaWNhbGw6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKICB9LAogIHNldHVwKHsgYXBpY2FsbCB9KSB7CiAgICBjb25zdCBkYXRhID0gcmVmKHVuZGVmaW5lZCkKICAgIGNvbnN0IGVycm9yID0gcmVmKHVuZGVmaW5lZCkKICAgIGNvbnN0IHN0YXRlID0gcmVmKCdpZGxlJykKCiAgICBjb25zdCBzdGF0ZXMgPSB7CiAgICAgIGlkbGU6ICdpZGxlJywKICAgICAgbG9hZGluZzogJ2xvYWRpbmcnLAogICAgICBzdWNjZXNzOiAnc3VjY2VzcycsCiAgICAgIGVycm9yOiAnZXJyb3InLAogICAgfQoKICAgIGNvbnN0IHNldERhdGEgPSAoZGF0YSkgPT4gewogICAgICBlcnJvci5kYXRhID0gZGF0YQogICAgfQoKICAgIGNvbnN0IHNldEVycm9yID0gKGVycm9yKSA9PiB7CiAgICAgIGVycm9yLnZhbHVlID0gZXJyb3IKICAgIH0KCiAgICAvLyBjb25zdCBkZXN0cm95RXJyb3IgPSAoKSA9PiB7CiAgICAvLyAgIGVycm9yLnZhbHVlID0gdW5kZWZpbmVkCiAgICAvLyB9CgogICAgY29uc3QgbG9hZCA9IGFzeW5jICgpID0+IHsKICAgICAgLy8gc3RhdGUudmFsdWUgPSBzdGF0ZXMubG9hZGluZwogICAgICAvLyBkZXN0cm95RXJyb3IoKQogICAgICB0cnkgewogICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBhcGljYWxsKCkKICAgICAgICBjb25zb2xlLmxvZyhkYXRhKQogICAgICAgIHN0YXRlLnZhbHVlID0gc3RhdGVzLnN1Y2Nlc3MKICAgICAgICBzZXREYXRhKGRhdGEpCiAgICAgICAgcmV0dXJuIGRhdGEKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBzdGF0ZS52YWx1ZSA9IHN0YXRlcy5lcnJvcgogICAgICAgIHNldEVycm9yKGVycm9yKQogICAgICAgIHJldHVybiBlcnJvcgogICAgICB9CiAgICB9CgogICAgb25Nb3VudGVkKCgpID0+IHsKICAgICAgY29uc29sZS5sb2coYXBpY2FsbCgpKQogICAgICBsb2FkKCkKICAgIH0pCgogICAgcmV0dXJuIHsgZGF0YSwgbG9hZCwgZXJyb3IsIHN0YXRlIH0KICB9LAp9Cg=="},{"version":3,"sources":["Fetch.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Fetch.vue","sourceRoot":"src/components/renderless","sourcesContent":["<template>\n  <div>\n    <slot v-if=\"state === 'error'\" name=\"error\" v-bind=\"{ error, load }\">\n      <pre>{{ error }}</pre>\n    </slot>\n    <slot v-if=\"state === 'success'\" name=\"success\" v-bind=\"{ data, load }\">\n      <pre>{{ data }}</pre>\n    </slot>\n    <slot v-if=\"state === 'loading'\" name=\"loading\">loading...</slot>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from '@vue/composition-api'\n\nexport default {\n  props: {\n    apicall: {\n      type: Function,\n      required: true,\n    },\n  },\n  setup({ apicall }) {\n    const data = ref(undefined)\n    const error = ref(undefined)\n    const state = ref('idle')\n\n    const states = {\n      idle: 'idle',\n      loading: 'loading',\n      success: 'success',\n      error: 'error',\n    }\n\n    const setData = (data) => {\n      error.data = data\n    }\n\n    const setError = (error) => {\n      error.value = error\n    }\n\n    // const destroyError = () => {\n    //   error.value = undefined\n    // }\n\n    const load = async () => {\n      // state.value = states.loading\n      // destroyError()\n      try {\n        const data = await apicall()\n        console.log(data)\n        state.value = states.success\n        setData(data)\n        return data\n      } catch (error) {\n        state.value = states.error\n        setError(error)\n        return error\n      }\n    }\n\n    onMounted(() => {\n      console.log(apicall())\n      load()\n    })\n\n    return { data, load, error, state }\n  },\n}\n</script>\n"]}]}