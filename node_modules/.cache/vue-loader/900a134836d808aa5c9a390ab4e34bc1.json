{"remainingRequest":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aleksej/Projects/what2vue/src/views/Profile/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aleksej/Projects/what2vue/src/views/Profile/index.vue","mtime":1614764959204},{"path":"/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js","mtime":1610645746854},{"path":"/Users/aleksej/Projects/what2vue/node_modules/babel-loader/lib/index.js","mtime":1610645748948},{"path":"/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js","mtime":1610645746854},{"path":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/index.js","mtime":1610645763935}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAnQC9hcGknCmltcG9ydCBCdXR0b25Hcm91cCBmcm9tICdAL2NvbXBvbmVudHMvQnV0dG9uR3JvdXAnCgpjb25zdCByZW5hbWUgPSAoeyBpZDogdmFsdWUsIG5hbWU6IGxhYmVsIH0pID0+ICh7CiAgdmFsdWUsCiAgbGFiZWwsCn0pCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Byb2ZpbGUnLAogIGNvbXBvbmVudHM6IHsKICAgIEJ1dHRvbkdyb3VwLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZhdm9yaXRlR2VucmU6IFtdLAogICAgICBnZW5yZXM6IFtdLAogICAgICBjb3VudHJpZXM6IFtdLAogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0R2VucmVzKCkKICAgIHRoaXMuZ2V0Q291bnRyaWVzKCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldEdlbnJlcygpIHsKICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGkuZ2VucmUuaW5kZXgoKQogICAgICB0aGlzLmdlbnJlcyA9IHJlc3BvbnNlLmdlbnJlcy5tYXAocmVuYW1lKQogICAgICByZXR1cm4gcmVzcG9uc2UKICAgIH0sCiAgICBhc3luYyBnZXRDb3VudHJpZXMoKSB7CiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpLmNvdW50cmllcy5pbmRleCgpCiAgICAgIHRoaXMuY291bnRyaWVzID0gcmVzcG9uc2UKICAgICAgcmV0dXJuIHJlc3BvbnNlCiAgICB9LAogIH0sCn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Profile","sourcesContent":["<template>\n  <div>\n    <h2 class=\"pb-4\">Favorite genre</h2>\n\n    <ButtonGroup :buttons=\"genres\" />\n  </div>\n</template>\n\n<script>\nimport api from '@/api'\nimport ButtonGroup from '@/components/ButtonGroup'\n\nconst rename = ({ id: value, name: label }) => ({\n  value,\n  label,\n})\n\nexport default {\n  name: 'Profile',\n  components: {\n    ButtonGroup,\n  },\n  data() {\n    return {\n      favoriteGenre: [],\n      genres: [],\n      countries: [],\n    }\n  },\n  mounted() {\n    this.getGenres()\n    this.getCountries()\n  },\n  methods: {\n    async getGenres() {\n      const response = await api.genre.index()\n      this.genres = response.genres.map(rename)\n      return response\n    },\n    async getCountries() {\n      const response = await api.countries.index()\n      this.countries = response\n      return response\n    },\n  },\n}\n</script>\n"]}]}