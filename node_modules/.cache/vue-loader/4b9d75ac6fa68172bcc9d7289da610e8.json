{"remainingRequest":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aleksej/Projects/what2vue/src/views/Discover/index.vue?vue&type=template&id=803d2434&","dependencies":[{"path":"/Users/aleksej/Projects/what2vue/src/views/Discover/index.vue","mtime":1615051630927},{"path":"/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js","mtime":1610645746854},{"path":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610645763935},{"path":"/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js","mtime":1610645746854},{"path":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/index.js","mtime":1610645763935}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}