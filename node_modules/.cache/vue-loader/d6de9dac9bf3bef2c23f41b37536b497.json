{"remainingRequest":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aleksej/Projects/what2vue/src/components/CategoryItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aleksej/Projects/what2vue/src/components/CategoryItem.vue","mtime":1615053216736},{"path":"/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js","mtime":1610645746854},{"path":"/Users/aleksej/Projects/what2vue/node_modules/babel-loader/lib/index.js","mtime":1610645748948},{"path":"/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js","mtime":1610645746854},{"path":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/index.js","mtime":1610645763935}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBhcGkgZnJvbSAnQC9hcGknCmltcG9ydCBNb3ZpZUl0ZW0gZnJvbSAnQC9jb21wb25lbnRzL01vdmllSXRlbScKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgTW92aWVJdGVtIH0sCiAgcHJvcHM6IHsKICAgIGNhdGVnb3J5OiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtb3ZpZXM6IFtdLAogICAgICB0b3RhbDogJycsCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5nZXRDYXRlZ29yeSgpCiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBnZXRDYXRlZ29yeSgpIHsKICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGkubW92aWVDYXRlZ29yeS5zaG93KHRoaXMuY2F0ZWdvcnkuaWQpCiAgICAgIGNvbnN0IHsgdG90YWxfcmVzdWx0cywgcmVzdWx0cyB9ID0gcmVzcG9uc2UKICAgICAgdGhpcy50b3RhbCA9IHRvdGFsX3Jlc3VsdHMKICAgICAgdGhpcy5tb3ZpZXMgPSByZXN1bHRzCiAgICAgIHJldHVybiByZXNwb25zZQogICAgfSwKICB9LAp9Cg=="},{"version":3,"sources":["CategoryItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CategoryItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <section class=\"grid gap-4\">\n    <header class=\"flex justify-between\">\n      <h2 class=\"uppercase font-bold\">{{ category.name }}</h2>\n      <div>\n        <router-link\n          class=\"app-button\"\n          :to=\"{\n            name: 'category',\n            params: {\n              id: category.id,\n            },\n            query: {\n              page: 1,\n            },\n          }\"\n        >\n          view all {{ total }}\n        </router-link>\n      </div>\n    </header>\n    <div v-if=\"movies.length > 0\" class=\"h-scoller relative overflow-hidden\">\n      <div class=\"h-scoller__body w-full\">\n        <ul class=\"h-scoller__list\">\n          <li v-for=\"movie in movies\" :key=\"movie.id\" class=\"h-scoller__item\">\n            <MovieItem :movie=\"movie\" />\n          </li>\n        </ul>\n      </div>\n      <div\n        class=\"h-scoller__overlay-left absolute left-0 bottom-0 top-0 pointer-events-none w-16\"\n      ></div>\n      <div\n        class=\"h-scoller__overlay-right absolute right-0 bottom-0 top-0 pointer-events-none w-16\"\n      ></div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport api from '@/api'\nimport MovieItem from '@/components/MovieItem'\nexport default {\n  components: { MovieItem },\n  props: {\n    category: {\n      type: Object,\n      required: true,\n    },\n  },\n\n  data() {\n    return {\n      movies: [],\n      total: '',\n    }\n  },\n  mounted() {\n    this.getCategory()\n  },\n  methods: {\n    async getCategory() {\n      const response = await api.movieCategory.show(this.category.id)\n      const { total_results, results } = response\n      this.total = total_results\n      this.movies = results\n      return response\n    },\n  },\n}\n</script>\n"]}]}