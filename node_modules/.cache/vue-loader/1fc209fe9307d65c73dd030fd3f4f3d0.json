{"remainingRequest":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aleksej/Projects/what2vue/src/views/Profile/index.vue?vue&type=style&index=0&id=c20a71bc&scoped=true&lang=postcss&","dependencies":[{"path":"/Users/aleksej/Projects/what2vue/src/views/Profile/index.vue","mtime":1615059855889},{"path":"/Users/aleksej/Projects/what2vue/node_modules/css-loader/dist/cjs.js","mtime":1610645763104},{"path":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1610645763935},{"path":"/Users/aleksej/Projects/what2vue/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":1610645764227},{"path":"/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js","mtime":1610645746854},{"path":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/index.js","mtime":1610645763935}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hcHAtYnV0dG9uIHsKICBAYXBwbHkgcm91bmRlZC1mdWxsIHB4LTQgcHktMiBib3JkZXIgYm9yZGVyLWdyYXktMzAwIGJnLXdoaXRlIHRleHQtc20gbGVhZGluZy01IGZvbnQtbWVkaXVtIHRleHQtZ3JheS03MDAgIHRyYW5zaXRpb24gZWFzZS1pbi1vdXQgZHVyYXRpb24tMTUwOwp9Ci5hcHAtYnV0dG9uOmhvdmVyIHsKICBAYXBwbHkgdGV4dC1ncmF5LTUwMCBvdXRsaW5lLW5vbmU7Cn0KCi5hcHAtYnV0dG9uOmZvY3VzIHsKICBAYXBwbHkgb3V0bGluZS1ub25lOwp9CgouYXBwLWJ1dHRvbi1hY3RpdmUgewogIEBhcHBseSBiZy1ibHVlLTEwMCB0ZXh0LWJsdWUtODAwOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/Profile","sourcesContent":["<template>\n  <div>\n    <h2 class=\"pb-4\">Favorite genre</h2>\n    <FormSelect v-model=\"favoriteGenre\" :options=\"genres\" :mode=\"mode\">\n      <template #default=\"{ select, isSelected, options }\">\n        <ul class=\"relative inline-flex flex-wrap shadow-sm -m-1\">\n          <li v-for=\"option in options\" :key=\"option.value\" class=\"p-1\">\n            <button\n              type=\"button\"\n              :class=\"{ 'app-button-active': isSelected(option) }\"\n              class=\"app-button\"\n              @click=\"select(option, $event)\"\n            >\n              {{ option.label }}\n            </button>\n          </li>\n        </ul>\n      </template>\n    </FormSelect>\n  </div>\n</template>\n\n<script>\nimport api from '@/api'\nimport FormSelect from '@/components/renderless/FormSelect'\n\nexport default {\n  name: 'Profile',\n  components: {\n    FormSelect,\n  },\n  data() {\n    return {\n      favoriteGenre: [],\n      genres: [],\n      mode: 'multi',\n    }\n  },\n  async mounted() {\n    const response = await api.genre.index()\n    this.genres = response.genres.map(({ id: value, name: label }) => ({\n      value,\n      label,\n    }))\n  },\n}\n</script>\n\n<style scoped lang=\"postcss\">\n.app-button {\n  @apply rounded-full px-4 py-2 border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-700  transition ease-in-out duration-150;\n}\n.app-button:hover {\n  @apply text-gray-500 outline-none;\n}\n\n.app-button:focus {\n  @apply outline-none;\n}\n\n.app-button-active {\n  @apply bg-blue-100 text-blue-800;\n}\n</style>\n"]}]}