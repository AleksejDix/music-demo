{"remainingRequest":"/Users/aleksej/Projects/what2vue/node_modules/babel-loader/lib/index.js!/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aleksej/Projects/what2vue/src/components/renderless/FormSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aleksej/Projects/what2vue/src/components/renderless/FormSelect.vue","mtime":1614764959202},{"path":"/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js","mtime":1610645746854},{"path":"/Users/aleksej/Projects/what2vue/node_modules/babel-loader/lib/index.js","mtime":1610645748948},{"path":"/Users/aleksej/Projects/what2vue/node_modules/cache-loader/dist/cjs.js","mtime":1610645746854},{"path":"/Users/aleksej/Projects/what2vue/node_modules/vue-loader/lib/index.js","mtime":1610645763935}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwoKdmFyIGV4Y2x1ZGVzID0gZnVuY3Rpb24gZXhjbHVkZXMobGlzdCkgewogIHJldHVybiBmdW5jdGlvbiAoeCkgewogICAgcmV0dXJuICFsaXN0LmluY2x1ZGVzKHgpOwogIH07Cn07Cgp2YXIgc2V0Q3JlYXRlID0gZnVuY3Rpb24gc2V0Q3JlYXRlKGxpc3QsIHNldCkgewogIHJldHVybiAhbGlzdC5sZW5ndGggPyBzZXQgOiBsaXN0LmNvbmNhdChzZXQuZmlsdGVyKGV4Y2x1ZGVzKGxpc3QpKSk7Cn07Cgp2YXIgc2V0RGVzdHJveSA9IGZ1bmN0aW9uIHNldERlc3Ryb3kobGlzdCwgc2V0KSB7CiAgcmV0dXJuIGxpc3QuZmlsdGVyKGV4Y2x1ZGVzKHNldCkpOwp9OwoKdmFyIGdldEluZGV4ID0gZnVuY3Rpb24gZ2V0SW5kZXgobGlzdCwgeCkgewogIHJldHVybiBsaXN0LmZpbmRJbmRleChmdW5jdGlvbiAob3B0aW9uKSB7CiAgICByZXR1cm4gb3B0aW9uLnZhbHVlID09PSB4OwogIH0pOwp9OwoKdmFyIGdldFN1YlNldCA9IGZ1bmN0aW9uIGdldFN1YlNldChsaXN0LCBzdGFydCwgZW5kKSB7CiAgdmFyIGkxID0gZ2V0SW5kZXgobGlzdCwgc3RhcnQpOwogIHZhciBpMiA9IGdldEluZGV4KGxpc3QsIGVuZCk7CiAgcmV0dXJuIGxpc3Quc2xpY2UoTWF0aC5taW4oaTIsIGkxKSwgTWF0aC5tYXgoaTIsIGkxKSArIDEpLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgcmV0dXJuIGl0ZW0udmFsdWU7CiAgfSk7Cn07CgpleHBvcnQgZGVmYXVsdCB7CiAgbW9kZWw6IHsKICAgIHByb3A6ICdzZWxlY3Rpb24nLAogICAgZXZlbnQ6ICd1cGRhdGUnLAogICAgbWVtb3J5OiB1bmRlZmluZWQKICB9LAogIHByb3BzOiB7CiAgICBzZWxlY3Rpb246IHsKICAgICAgdHlwZTogW0FycmF5LCBTdHJpbmcsIE51bWJlcl0sCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgb3B0aW9uczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9LAogICAgbW9kZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdzaW5nbGUnCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VsZWN0ZWQ6IHVuZGVmaW5lZAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBsYXN0OiBmdW5jdGlvbiBsYXN0KCkgewogICAgICByZXR1cm4gdGhpcy5zZWxlY3RlZC5sZW5ndGggPyB0aGlzLnNlbGVjdGVkW3RoaXMuc2VsZWN0ZWQubGVuZ3RoIC0gMV0gOiB1bmRlZmluZWQ7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgc2VsZWN0ZWQ6IGZ1bmN0aW9uIHNlbGVjdGVkKCkgewogICAgICB2YXIgc2VsZWN0ZWQgPSB0aGlzLnNlbGVjdGVkOwogICAgICB0aGlzLiRlbWl0KCd1cGRhdGUnLCBzZWxlY3RlZCk7CiAgICB9LAogICAgbW9kZTogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKG5ld01vZGUpIHsKICAgICAgICBpZiAobmV3TW9kZSA9PT0gJ211bHRpJykgewogICAgICAgICAgdGhpcy5zZWxlY3RlZCA9IFtdOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnNlbGVjdGVkID0gJyc7CiAgICAgICAgfQogICAgICB9LAogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNlbGVjdDogZnVuY3Rpb24gc2VsZWN0KG9wdGlvbikgewogICAgICB0aGlzLm1lbW9yeSA9IHRoaXMubGFzdDsKICAgICAgdmFyIGluY2x1ZGVzID0gdGhpcy5zZWxlY3RlZC5pbmNsdWRlcyhvcHRpb24udmFsdWUpOwoKICAgICAgaWYgKHRoaXMubW9kZSA9PT0gJ211bHRpJykgewogICAgICAgIGlmICh0aGlzLm1lbW9yeSAmJiBldmVudC5zaGlmdEtleSkgewogICAgICAgICAgdmFyIHNldCA9IGdldFN1YlNldCh0aGlzLm9wdGlvbnMsIHRoaXMubWVtb3J5LCBvcHRpb24udmFsdWUpOwogICAgICAgICAgdmFyIHNldFRvZ2dsZSA9IGluY2x1ZGVzID8gc2V0RGVzdHJveSA6IHNldENyZWF0ZTsKICAgICAgICAgIHRoaXMuc2VsZWN0ZWQgPSBzZXRUb2dnbGUodGhpcy5zZWxlY3RlZCwgc2V0KTsKICAgICAgICB9CgogICAgICAgIGlmIChpbmNsdWRlcykgewogICAgICAgICAgdGhpcy5zZWxlY3RlZCA9IHRoaXMuc2VsZWN0ZWQuZmlsdGVyKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICAgIHJldHVybiB4ICE9PSBvcHRpb24udmFsdWU7CiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5zZWxlY3RlZC5wdXNoKG9wdGlvbi52YWx1ZSk7CiAgICAgICAgfQoKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuc2VsZWN0ZWQgPSBvcHRpb24udmFsdWU7CiAgICB9LAogICAgaXNTZWxlY3RlZDogZnVuY3Rpb24gaXNTZWxlY3RlZChvcHRpb24pIHsKICAgICAgaWYgKHRoaXMubW9kZSA9PT0gJ211bHRpJykgewogICAgICAgIHJldHVybiB0aGlzLnNlbGVjdGVkLmluY2x1ZGVzKG9wdGlvbi52YWx1ZSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBvcHRpb24udmFsdWUgPT09IHRoaXMuc2VsZWN0ZWQ7CiAgICB9CiAgfSwKICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgIHZhciBzZWxlY3RlZCA9IHRoaXMuc2VsZWN0ZWQsCiAgICAgICAgc2VsZWN0ID0gdGhpcy5zZWxlY3QsCiAgICAgICAgaXNTZWxlY3RlZCA9IHRoaXMuaXNTZWxlY3RlZCwKICAgICAgICBvcHRpb25zID0gdGhpcy5vcHRpb25zLAogICAgICAgIG1lbW9yeSA9IHRoaXMubWVtb3J5OwogICAgcmV0dXJuIHRoaXMuJHNjb3BlZFNsb3RzLmRlZmF1bHQoewogICAgICBzZWxlY3RlZDogc2VsZWN0ZWQsCiAgICAgIHNlbGVjdDogc2VsZWN0LAogICAgICBpc1NlbGVjdGVkOiBpc1NlbGVjdGVkLAogICAgICBvcHRpb25zOiBvcHRpb25zLAogICAgICBtZW1vcnk6IG1lbW9yeQogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["FormSelect.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nconst excludes = (list) => (x) => !list.includes(x)\n\nconst setCreate = (list, set) =>\n  !list.length ? set : list.concat(set.filter(excludes(list)))\n\nconst setDestroy = (list, set) => list.filter(excludes(set))\n\nconst getIndex = (list, x) => list.findIndex((option) => option.value === x)\n\nconst getSubSet = (list, start, end) => {\n  const i1 = getIndex(list, start)\n  const i2 = getIndex(list, end)\n  return list\n    .slice(Math.min(i2, i1), Math.max(i2, i1) + 1)\n    .map((item) => item.value)\n}\n\nexport default {\n  model: {\n    prop: 'selection',\n    event: 'update',\n    memory: undefined,\n  },\n  props: {\n    selection: {\n      type: [Array, String, Number],\n      required: true,\n    },\n    options: {\n      type: Array,\n      default: () => [],\n    },\n    mode: {\n      type: String,\n      default: 'single',\n    },\n  },\n  data() {\n    return {\n      selected: undefined,\n    }\n  },\n  computed: {\n    last() {\n      return this.selected.length\n        ? this.selected[this.selected.length - 1]\n        : undefined\n    },\n  },\n  watch: {\n    selected() {\n      const { selected } = this\n      this.$emit('update', selected)\n    },\n    mode: {\n      handler(newMode) {\n        if (newMode === 'multi') {\n          this.selected = []\n        } else {\n          this.selected = ''\n        }\n      },\n      immediate: true,\n    },\n  },\n  methods: {\n    select(option) {\n      this.memory = this.last\n\n      const includes = this.selected.includes(option.value)\n\n      if (this.mode === 'multi') {\n        if (this.memory && event.shiftKey) {\n          const set = getSubSet(this.options, this.memory, option.value)\n          const setToggle = includes ? setDestroy : setCreate\n          this.selected = setToggle(this.selected, set)\n        }\n\n        if (includes) {\n          this.selected = this.selected.filter((x) => x !== option.value)\n        } else {\n          this.selected.push(option.value)\n        }\n        return\n      }\n\n      this.selected = option.value\n    },\n    isSelected(option) {\n      if (this.mode === 'multi') {\n        return this.selected.includes(option.value)\n      }\n      return option.value === this.selected\n    },\n  },\n  render() {\n    const { selected, select, isSelected, options, memory } = this\n    return this.$scopedSlots.default({\n      selected,\n      select,\n      isSelected,\n      options,\n      memory,\n    })\n  },\n}\n</script>\n"],"sourceRoot":"src/components/renderless"}]}